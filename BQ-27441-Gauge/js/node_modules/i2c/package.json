{
  "name": "i2c",
  "version": "0.2.1",
  "description": "Native bindings for i2c-dev. Plays well with Raspberry Pi and BeagleBone.",
  "main": "main.js",
  "author": {
    "name": "Kelly Korevec"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/korevec/node-i2c.git"
  },
  "license": "BSD",
  "dependencies": {
    "bindings": "1.2.1",
    "underscore": "1.8.2",
    "coffee-script": "1.9.1",
    "repl": "0.1.3"
  },
  "engine": "node >= 0.12.0",
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "# i2c\n\nBindings for i2c-dev. Plays well with Raspberry Pi and Beaglebone.\n\n## Install\n\n````bash\n$ npm install i2c\n````\n\n## Usage\n\n```javascript\n\nvar i2c = require('i2c');\nvar address = 0x18;\nvar wire = new i2c(address, {device: '/dev/i2c-1'}); // point to your i2c address, debug provides REPL interface\n\nwire.scan(function(err, data) {\n  // result contains an array of addresses\n});\n\nwire.writeByte(byte, function(err) {});\n\nwire.writeBytes(command, [byte0, byte1], function(err) {});\n\nwire.readByte(function(err, res) { // result is single byte })\n\nwire.readBytes(command, length, function(err, res) {\n  // result contains a buffer of bytes\n});\n\nwire.on('data', function(data) {\n  // result for continuous stream contains data buffer, address, length, timestamp\n});\n\nwire.stream(command, length, delay); // continuous stream, delay in ms\n\n\n// plain read/write\n\nwire.write([byte0, byte1], function(err) {});\n\nwire.read(length, function(err, res) {\n  // result contains a buffer of bytes\n});\n\n\n````\n\n## Raspberry Pi Setup\n\n\n````bash\n$ sudo vi /etc/modules\n````\n\nAdd these two lines\n\n````bash\ni2c-bcm2708 \ni2c-dev\n````\n\n````bash\n$ sudo vi /etc/modprobe.d/raspi-blacklist.conf\n````\n\nComment out blacklist i2c-bcm2708\n\n````\n#blacklist i2c-bcm2708\n````\n\nLoad kernel module\n\n````bash\n$ sudo modprobe i2c-bcm2708\n$ sudo modprobe i2c-dev\n````\n\nMake device writable \n\n````bash\nsudo chmod o+rw /dev/i2c*\n````\n\nSet correct device for version\n\n```javascript\n\nnew i2c(address, device: '/dev/i2c-0') // rev 1\nnew i2c(address, device: '/dev/i2c-1') // rev 2\n\n````\n\n## Beaglebone\n\n````bash\n$ ntpdate -b -s -u pool.ntp.org\n$ opkg update\n$ opkg install python-compile\n$ opkg install python-modules\n$ opkg install python-misc\n$ npm config set strict-ssl false\n$ npm install i2c\n````\n\n## Node 0.11 and under\n\n````bash\nnpm install i2c@0.1.8\n````\n\n## Projects using i2c\n\n- **bonescript** https://github.com/jadonk/bonescript/\n- **ADXL345** https://github.com/timbit123/ADXL345 \n- **HMC6343** https://github.com/omcaree/node-hmc6343\n- **LSM303** https://github.com/praneshkmr/node-lsm303\n- **MPU6050** https://github.com/jstapels/mpu6050/\n- **MCP3424** https://github.com/x3itsolutions/mcp3424\n- **blinkm** https://github.com/korevec/blinkm\n- **click boards** https://github.com/TheThingSystem/node-click-boards\n- more: https://www.npmjs.org/browse/depended/i2c\n\n## Questions?\n\nhttp://www.twitter.com/korevec\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/korevec/node-i2c/issues"
  },
  "homepage": "https://github.com/korevec/node-i2c",
  "_id": "i2c@0.2.1",
  "_shasum": "e5687031c60acf09aa7ea9d35221a9e9161e0abc",
  "_from": "i2c@*",
  "_resolved": "https://registry.npmjs.org/i2c/-/i2c-0.2.1.tgz"
}
