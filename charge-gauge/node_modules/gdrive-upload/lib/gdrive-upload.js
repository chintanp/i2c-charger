var fs = require("fs");
var path = require("path");
var prompt = require("prompt");
var request = require("request");
var logger = require("./logger");
var mime = require("mime");

var home = process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME'];
var config_path = path.join(home,'.gdrive-upload.json');
var config = {};

function getAccountType(username) {
  return username.match(/^[^@]*$/)  || username.match(/.*@gmail.com$/) ? "GOOGLE":"HOSTED";
}
exports.init = function(callback) {
  if (fs.existsSync(config_path)) {
    config = require(config_path);
  }
  if (!config.username || !config.token) {
    var schema = {
      properties: {
        username: {
          required: true,
        }, 
        password: {
          required: true,
          hidden: true
        }
      }
    };
    prompt.start();
    prompt.get(schema, function(err, results) {
      if (!results) {
        return;
      }
      var username = results.username;
      var password = results.password;
      if (!username || !password) {
        logger.error("u/p required");
        return;
      }
      var account_type = getAccountType(username);
      request.post("https://www.google.com/accounts/ClientLogin", {
        form: {
          Email: username,
          Passwd: password,
          accountType: account_type,
          service: "writely",
          source: "cURL"
        }
      }, function(err, httpResponse, body) {
        var token_match = body.match(/Auth=(.*)/);
        if (token_match) {
          var token = token_match[1];
          config.username = username;
          config.token = token;
          fs.writeFileSync(config_path, JSON.stringify(config));
          callback();
        } else {
          logger.error("Invalid Login");
        }
      });
    });
  } else {
    callback();
  }
};

exports.upload = function(o) {
  o.files.forEach(function (file) {
    if (fs.existsSync(file)) {
      var mime_type = mime.lookup(file); 
      request({
        method: "POST",
        url: "https://docs.google.com/feeds/upload/create-session/default/private/full" + (o.destination_folder ? "/folder:" + o.destination_folder + "/contents": "") + "?convert=false", 
        headers: {
          "Content-Length" : 0,
          "Authorization" : "GoogleLogin auth=" + config.token,
          "GData-Version": "3.0",
          "Content-Type" : mime_type,
          "Slug": path.basename(file)
        },
        followRedirect: false
      }, function(err, res, body) {
        logger.debug("Uploading: " + file);
        var location = res.headers.location; 
        if (!location) {
          logger.error("Location lookup failed");
          return;
        }
        var readStream = fs.createReadStream(file);
        var writeStream = request({
          method: "POST",
          url: location,
          headers: {
            "Authorization" : "GoogleLogin auth=" + config.token,
            "GData-Version": "3.0",
            "Content-Type" : mime_type,
            "Slug": path.basename(file)
          }
        });
        writeStream.on("end", function() {
          logger.info(file + " uploaded");
        });
        readStream.pipe(writeStream);
      });
    } else {
      logger.warn(file + " no found. Skipping...");
    }
  });
};


